#names(dipodium)
head(dipodium)
#names(dipodium)
head(dipodium)
d1=dipodium %>%
select(Number_of_fruits, Number_of_Flowers) %>%
drop_na()
#d1
attach(dipodium)
d1=dipodium %>%
select(Number_of_fruits, Number_of_Flowers) %>%
drop_na()
boxplot1 <- ggplot(d1, aes(Number_of_fruits, x=1))+
geom_boxplot()+
annotate("text", x= 1,y= 5, label="Fig. 1")+
labs(x="", y="Cantidad de Frutos")+
theme(axis.title=element_text(size=10,face="bold"))
boxplot2 <- ggplot(d1, aes(Number_of_fruits, x=1))+
geom_boxplot(notch=TRUE) +
annotate("text", x= 0.7,y= 7, label="Fig. 2")+
labs(x="", y="Cantidad de Frutos")+
theme(axis.title=element_text(size=10,face="bold"))
boxplot4 <- ggplot(d1, aes(factor(Number_of_Flowers), Number_of_fruits))+
geom_boxplot(notch=FALSE)+
annotate("text", x= 2,y= 10, label="Fig. 4")+
labs(y="Cantidad de Frutos", x="Cantidad de Flores")+
theme(axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90))
gridExtra::grid.arrange(boxplot1,boxplot2, boxplot3, boxplot4,ncol=2)
#names(dipodium)
head(dipodium)
attach(dipodium)
d1=dipodium %>%
dplyr::select(Number_of_fruits, Number_of_Flowers) %>%
drop_na()
#d1
install.packages("conflicted")
#names(dipodium)
head(dipodium)
d1=dipodium %>%
dplyr::select(Number_of_fruits, Number_of_Flowers) %>%
drop_na()
#d1
#names(dipodium)
library(conflicted)
#names(dipodium)
library(conflicted)
head(dipodium)
d1=dipodium %>%
select(Number_of_fruits, Number_of_Flowers) %>%
drop_na()
#d1
#d1
R.version
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message = FALSE)
library(ggversa)
library(tidyverse)
library(gridExtra)# Para organizar múltiples gráficos juntos
#names(dipodium)
library(conflicted)
head(dipodium)
d1=dipodium %>%
dplyr::select(Number_of_fruits, Number_of_Flowers) %>%
drop_na()
#d1
R.version
library(janitor)
dipodium=clean_names(dipodium)
head(dipodium)
d1=dipodium %>%
dplyr::select(number_of_fruits, number_of_flowers) %>%
drop_na()
dipodium %>%
dplyr::select(number_of_flowers, number_of_fruits) %>%
drop_na() %>%
ggplot(aes(factor(number_of_flowers), number_of_fruits,
fill=factor(number_of_flowers)))+
geom_boxplot(varwidth=TRUE)  # la función varwidth =TRUE cambia
#el ancho de la barras basado en una formula indicado abajo.
# Más datos más ancho la barra.
dipodium %>%
dplyr::select(number_of_flowers, number_of_fruits) %>%
drop_na() %>%
ggplot(aes(factor(number_of_flowers), number_of_fruits,
fill=factor(number_of_flowers)))+
geom_boxplot(varwidth=TRUE)+
theme(legend. position = "none")
dipodium %>%
dplyr::select(number_of_flowers, number_of_fruits) %>%
drop_na() %>%
ggplot(aes(factor(number_of_flowers), number_of_fruits,
fill=factor(number_of_flowers)))+
geom_boxplot(varwidth=TRUE)+
theme(legend.position = "none")
# la función varwidth =TRUE cambia
#el ancho de la barras basado en una formula indicado abajo.
# Más datos más ancho la barra.
dipodium %>%
dplyr::select(number_of_flowers, number_of_fruits) %>%
drop_na() %>%
ggplot(aes(factor(number_of_flowers), number_of_fruits,
fill=factor(number_of_flowers)))+
geom_boxplot(varwidth=TRUE)+
theme(legend.position = "none")+
xlab("Cantidad de Flores")+
ylab("Cantidad de Frutos")
# la función varwidth =TRUE cambia
#el ancho de la barras basado en una formula indicado abajo.
# Más datos más ancho la barra.
gridExtra::grid.arrange(boxplot1,boxplot2, boxplot3, boxplot4,ncol=2)
install.packages("gganimate")
install.packages("rgl")
install.packages("animation")
